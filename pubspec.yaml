name: seesaw_th
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.2.3 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  flutter_localizations: # Add this line
    sdk: flutter         # Add this line
    
  get: ^4.6.5  
  #connectivity_plus: ^2.3.6
  shared_preferences: ^2.2.2
  cached_network_image: ^3.2.1
   
  flutter_svg: ^2.0.9
  intl: ^0.18.0 
  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2
  firebase_core: ^2.20.0
  firebase_messaging: ^14.7.2
  firebase_core_platform_interface: ^5.0.0
  flutter_app_badger: ^1.5.0
  fluttertoast: ^8.2.2
  flutter_launcher_icons: 
  barcode_scan2: ^4.2.4
  dio: ^5.4.0
  flutter_easyloading: ^3.0.5
  video_player: ^2.8.1
  http: ^1.1.0 
  google_sign_in: ^6.1.6
  sign_in_with_apple: ^5.0.0
  settings_ui: ^2.0.2 
  awesome_notifications: ^0.8.2
  palette_generator: ^0.3.3+3
  multi_masked_formatter: ^1.0.0
  device_info_plus: ^9.1.1
  universal_io: ^2.2.2
  url_launcher: ^6.2.1
  font_awesome_flutter: ^10.6.0
  numberpicker: ^2.1.2
  universal_html: ^2.2.4
  webview_flutter: ^4.4.2
  uni_links: ^0.5.1
  flutter_native_splash: ^2.3.7 
  flutter_inappwebview: ^5.8.0
  flutter_windowmanager: ^0.2.0
  screen_capture_event: ^1.1.1
  screenshot_callback: ^3.0.1
  zefyrka:
    git:  https://github.com/bastokr/zefyrka.git
    #path: C:\git\zefyrka
   
  image_cropper: ^5.0.1 
  image_picker: ^1.0.5
  file_picker: ^6.1.1
  package_info_plus: ^4.2.0
  remove_markdown: ^0.0.2
  share_plus: ^7.2.1
  youtube_player_flutter: ^8.1.2
  time_range_picker: ^2.2.0
  flutter_widget_from_html_core: ^0.14.9
  flutter_speed_dial: ^7.0.0
  lottie: ^2.7.0
  form_field_validator: ^1.1.0
  material_tag_editor: ^0.1.2
  dotted_border: ^2.1.0
  easy_separator: ^1.0.1
  timeago: ^3.6.0
  percent_indicator: ^4.2.3
  sticky_headers: ^0.3.0+2 
  reorderables: ^0.6.0
  firebase_auth: ^4.15.3
  encrypt: ^5.0.3
  loading_animation_widget: ^1.2.0+4
  shimmer: ^3.0.0 
  validators: ^3.0.0
  flutter_image_slideshow: ^0.1.6
  notus_format: ^1.0.3
  video_thumbnail: ^0.5.3
  flutter_client_sse: ^2.0.1
  google_fonts: ^6.1.0
  shared_preferences_ios: ^2.1.1 
  overlay_tutorial: ^3.0.0
  sqflite: ^2.3.0
  flutter_webrtc: ^0.9.47

 

dev_dependencies:
  flutter_test:
    sdk: flutter 

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
 
 
  assets: 
    - assets/ 
    - assets/icons/
    - assets/images/
    
  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
  #  
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
  #flutter pub pub run flutter_native_splash:create
 
     
# 만드는 명령어 flutter pub run flutter_launcher_icons:main
flutter_icons:
  android: "launcher_icon" 
  ios: true
  image_path: "assets/icons/playstore.png"
  background_color: "#000000"


# flutter_native_splash.yaml 생성
#flutter_native_splash:
#  image: "assets/icon/seesaw_icon.png"
#  color: ffffff   
# dart run flutter_native_splash:create

module: 
  androidX: true
 
# 빌드방법 
  
# version: 1.1.0+10 버젼변경
# flutter build appbundle          
# flutter build apk --release --target-platform=android-arm64
#    def keystoreProperties = new Properties()
#    def keystorePropertiesFile = rootProject.file('key.properties')
#    if (keystorePropertiesFile.exists()) {
#       keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
#   }

#  signingConfigs {  
#      release {
#           keyAlias keystoreProperties['keyAlias']
#           keyPassword keystoreProperties['keyPassword']
#           storeFile file(keystoreProperties['storeFile'])
#           storePassword keystoreProperties['storePassword']
#       }
#   }

# flutter debug -d chrome --no-sound-null-safety --web-renderer=html 디버깅 실행 
# CORS 작동하지 않는 PHP 복붙노트 - 
# https://cnpnote.tistory.com/entry/CORS-%EC%9E%91%EB%8F%99%ED%95%98%EC%A7%80-%EC%95%8A%EB%8A%94-PHP
# keytool -list -v -alias androiddebugkey -keystore   debug.keystore -storepass android -keypass android
# keytool -v -list -keystore .\toolsdakey.jks 
# ./gradlew app:signingReport
# keytool -v -list -keystore .\legalmybot.keystore
#테햔이
#SHA1: 86:43:40:EB:A2:43:FF:68:FF:29:A5:39:05:43:6F:08:53:1C:22:A9
#SHA256: B1:67:3C:CC:50:DF:AA:AA:C2:16:21:DB:E6:69:53:41:46:84:35:0E:D4:A1:EF:A0:16:B7:D9:EC:07:15:3F:2E